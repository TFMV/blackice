// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: blackice/proto/blackice/v1/satellite.proto

package blackicev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BackupContentType int32

const (
	BackupContentType_CONTENT_TYPE_UNSPECIFIED BackupContentType = 0
	BackupContentType_LEDGER_SNAPSHOT          BackupContentType = 1
	BackupContentType_ENCRYPTED_KEY_MATERIAL   BackupContentType = 2
	BackupContentType_CRITICAL_CONFIG_STATE    BackupContentType = 3
	BackupContentType_FORENSIC_LOG_ARCHIVE     BackupContentType = 4
	BackupContentType_SYSTEM_RECOVERY_IMAGE    BackupContentType = 5
)

// Enum value maps for BackupContentType.
var (
	BackupContentType_name = map[int32]string{
		0: "CONTENT_TYPE_UNSPECIFIED",
		1: "LEDGER_SNAPSHOT",
		2: "ENCRYPTED_KEY_MATERIAL",
		3: "CRITICAL_CONFIG_STATE",
		4: "FORENSIC_LOG_ARCHIVE",
		5: "SYSTEM_RECOVERY_IMAGE",
	}
	BackupContentType_value = map[string]int32{
		"CONTENT_TYPE_UNSPECIFIED": 0,
		"LEDGER_SNAPSHOT":          1,
		"ENCRYPTED_KEY_MATERIAL":   2,
		"CRITICAL_CONFIG_STATE":    3,
		"FORENSIC_LOG_ARCHIVE":     4,
		"SYSTEM_RECOVERY_IMAGE":    5,
	}
)

func (x BackupContentType) Enum() *BackupContentType {
	p := new(BackupContentType)
	*p = x
	return p
}

func (x BackupContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackupContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_blackice_proto_blackice_v1_satellite_proto_enumTypes[0].Descriptor()
}

func (BackupContentType) Type() protoreflect.EnumType {
	return &file_blackice_proto_blackice_v1_satellite_proto_enumTypes[0]
}

func (x BackupContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackupContentType.Descriptor instead.
func (BackupContentType) EnumDescriptor() ([]byte, []int) {
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP(), []int{0}
}

type SatelliteLink_LinkState int32

const (
	SatelliteLink_LINK_STATE_UNKNOWN   SatelliteLink_LinkState = 0
	SatelliteLink_LINK_STATE_ACTIVE    SatelliteLink_LinkState = 1
	SatelliteLink_LINK_STATE_DEGRADED  SatelliteLink_LinkState = 2
	SatelliteLink_LINK_STATE_INACTIVE  SatelliteLink_LinkState = 3
	SatelliteLink_LINK_STATE_CONGESTED SatelliteLink_LinkState = 4
)

// Enum value maps for SatelliteLink_LinkState.
var (
	SatelliteLink_LinkState_name = map[int32]string{
		0: "LINK_STATE_UNKNOWN",
		1: "LINK_STATE_ACTIVE",
		2: "LINK_STATE_DEGRADED",
		3: "LINK_STATE_INACTIVE",
		4: "LINK_STATE_CONGESTED",
	}
	SatelliteLink_LinkState_value = map[string]int32{
		"LINK_STATE_UNKNOWN":   0,
		"LINK_STATE_ACTIVE":    1,
		"LINK_STATE_DEGRADED":  2,
		"LINK_STATE_INACTIVE":  3,
		"LINK_STATE_CONGESTED": 4,
	}
)

func (x SatelliteLink_LinkState) Enum() *SatelliteLink_LinkState {
	p := new(SatelliteLink_LinkState)
	*p = x
	return p
}

func (x SatelliteLink_LinkState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SatelliteLink_LinkState) Descriptor() protoreflect.EnumDescriptor {
	return file_blackice_proto_blackice_v1_satellite_proto_enumTypes[1].Descriptor()
}

func (SatelliteLink_LinkState) Type() protoreflect.EnumType {
	return &file_blackice_proto_blackice_v1_satellite_proto_enumTypes[1]
}

func (x SatelliteLink_LinkState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SatelliteLink_LinkState.Descriptor instead.
func (SatelliteLink_LinkState) EnumDescriptor() ([]byte, []int) {
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP(), []int{3, 0}
}

type BackupDataChunk struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BackupId         string                 `protobuf:"bytes,1,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`                                              // Unique ID for this backup operation
	ContentType      BackupContentType      `protobuf:"varint,2,opt,name=content_type,json=contentType,proto3,enum=blackice.v1.BackupContentType" json:"content_type,omitempty"` // Type of data being backed up
	DataPayload      []byte                 `protobuf:"bytes,3,opt,name=data_payload,json=dataPayload,proto3" json:"data_payload,omitempty"`                                     // Chunk of the data payload
	SequenceNumber   int64                  `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	IsLastChunk      bool                   `protobuf:"varint,5,opt,name=is_last_chunk,json=isLastChunk,proto3" json:"is_last_chunk,omitempty"`
	ChunkAttestation *Attestation           `protobuf:"bytes,6,opt,name=chunk_attestation,json=chunkAttestation,proto3" json:"chunk_attestation,omitempty"` // Attestation for this chunk
	Priority         int32                  `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`                                        // 0 (lowest) to 10 (highest) for traffic shaping
	DataHash         []byte                 `protobuf:"bytes,8,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`                         // Hash of data_payload for integrity check over high-latency link
	HashAlgorithm    string                 `protobuf:"bytes,9,opt,name=hash_algorithm,json=hashAlgorithm,proto3" json:"hash_algorithm,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BackupDataChunk) Reset() {
	*x = BackupDataChunk{}
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupDataChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupDataChunk) ProtoMessage() {}

func (x *BackupDataChunk) ProtoReflect() protoreflect.Message {
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupDataChunk.ProtoReflect.Descriptor instead.
func (*BackupDataChunk) Descriptor() ([]byte, []int) {
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP(), []int{0}
}

func (x *BackupDataChunk) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

func (x *BackupDataChunk) GetContentType() BackupContentType {
	if x != nil {
		return x.ContentType
	}
	return BackupContentType_CONTENT_TYPE_UNSPECIFIED
}

func (x *BackupDataChunk) GetDataPayload() []byte {
	if x != nil {
		return x.DataPayload
	}
	return nil
}

func (x *BackupDataChunk) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *BackupDataChunk) GetIsLastChunk() bool {
	if x != nil {
		return x.IsLastChunk
	}
	return false
}

func (x *BackupDataChunk) GetChunkAttestation() *Attestation {
	if x != nil {
		return x.ChunkAttestation
	}
	return nil
}

func (x *BackupDataChunk) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *BackupDataChunk) GetDataHash() []byte {
	if x != nil {
		return x.DataHash
	}
	return nil
}

func (x *BackupDataChunk) GetHashAlgorithm() string {
	if x != nil {
		return x.HashAlgorithm
	}
	return ""
}

type BackupAck struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	Status                      *Status                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	BackupId                    string                 `protobuf:"bytes,2,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	ChunkReceiptId              string                 `protobuf:"bytes,3,opt,name=chunk_receipt_id,json=chunkReceiptId,proto3" json:"chunk_receipt_id,omitempty"` // Confirms receipt of a specific chunk or the whole backup
	ReceivedAtOrbitalNodeUnixNs int64                  `protobuf:"varint,4,opt,name=received_at_orbital_node_unix_ns,json=receivedAtOrbitalNodeUnixNs,proto3" json:"received_at_orbital_node_unix_ns,omitempty"`
	OrbitalNodeAttestation      *Attestation           `protobuf:"bytes,5,opt,name=orbital_node_attestation,json=orbitalNodeAttestation,proto3" json:"orbital_node_attestation,omitempty"` // Attestation from satellite node of receipt
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *BackupAck) Reset() {
	*x = BackupAck{}
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackupAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupAck) ProtoMessage() {}

func (x *BackupAck) ProtoReflect() protoreflect.Message {
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupAck.ProtoReflect.Descriptor instead.
func (*BackupAck) Descriptor() ([]byte, []int) {
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP(), []int{1}
}

func (x *BackupAck) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *BackupAck) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

func (x *BackupAck) GetChunkReceiptId() string {
	if x != nil {
		return x.ChunkReceiptId
	}
	return ""
}

func (x *BackupAck) GetReceivedAtOrbitalNodeUnixNs() int64 {
	if x != nil {
		return x.ReceivedAtOrbitalNodeUnixNs
	}
	return 0
}

func (x *BackupAck) GetOrbitalNodeAttestation() *Attestation {
	if x != nil {
		return x.OrbitalNodeAttestation
	}
	return nil
}

type RetrieveBackupRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	BackupId             string                 `protobuf:"bytes,1,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	ContentTypeFilter    BackupContentType      `protobuf:"varint,2,opt,name=content_type_filter,json=contentTypeFilter,proto3,enum=blackice.v1.BackupContentType" json:"content_type_filter,omitempty"` // Optional: filter by content type
	AsOfTimestampUnixNs  int64                  `protobuf:"varint,3,opt,name=as_of_timestamp_unix_ns,json=asOfTimestampUnixNs,proto3" json:"as_of_timestamp_unix_ns,omitempty"`                          // Retrieve latest backup as of this time
	RetrieverAttestation *Attestation           `protobuf:"bytes,4,opt,name=retriever_attestation,json=retrieverAttestation,proto3" json:"retriever_attestation,omitempty"`                              // Authorization for retrieval
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RetrieveBackupRequest) Reset() {
	*x = RetrieveBackupRequest{}
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveBackupRequest) ProtoMessage() {}

func (x *RetrieveBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveBackupRequest.ProtoReflect.Descriptor instead.
func (*RetrieveBackupRequest) Descriptor() ([]byte, []int) {
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP(), []int{2}
}

func (x *RetrieveBackupRequest) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

func (x *RetrieveBackupRequest) GetContentTypeFilter() BackupContentType {
	if x != nil {
		return x.ContentTypeFilter
	}
	return BackupContentType_CONTENT_TYPE_UNSPECIFIED
}

func (x *RetrieveBackupRequest) GetAsOfTimestampUnixNs() int64 {
	if x != nil {
		return x.AsOfTimestampUnixNs
	}
	return 0
}

func (x *RetrieveBackupRequest) GetRetrieverAttestation() *Attestation {
	if x != nil {
		return x.RetrieverAttestation
	}
	return nil
}

type SatelliteLink struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	LinkId                string                  `protobuf:"bytes,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	GroundStationId       string                  `protobuf:"bytes,2,opt,name=ground_station_id,json=groundStationId,proto3" json:"ground_station_id,omitempty"`
	OrbitalNodeId         string                  `protobuf:"bytes,3,opt,name=orbital_node_id,json=orbitalNodeId,proto3" json:"orbital_node_id,omitempty"` // Satellite or HAPS ID
	State                 SatelliteLink_LinkState `protobuf:"varint,4,opt,name=state,proto3,enum=blackice.v1.SatelliteLink_LinkState" json:"state,omitempty"`
	CurrentLatencyMs      float64                 `protobuf:"fixed64,5,opt,name=current_latency_ms,json=currentLatencyMs,proto3" json:"current_latency_ms,omitempty"`
	CurrentBandwidthMbps  float64                 `protobuf:"fixed64,6,opt,name=current_bandwidth_mbps,json=currentBandwidthMbps,proto3" json:"current_bandwidth_mbps,omitempty"`
	PacketLossPercent     float64                 `protobuf:"fixed64,7,opt,name=packet_loss_percent,json=packetLossPercent,proto3" json:"packet_loss_percent,omitempty"`
	LastHeartbeatUnixNs   int64                   `protobuf:"varint,8,opt,name=last_heartbeat_unix_ns,json=lastHeartbeatUnixNs,proto3" json:"last_heartbeat_unix_ns,omitempty"`
	LinkStatusAttestation *Attestation            `protobuf:"bytes,9,opt,name=link_status_attestation,json=linkStatusAttestation,proto3" json:"link_status_attestation,omitempty"` // Attestation of this status from the ground/orbital node
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SatelliteLink) Reset() {
	*x = SatelliteLink{}
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SatelliteLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SatelliteLink) ProtoMessage() {}

func (x *SatelliteLink) ProtoReflect() protoreflect.Message {
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SatelliteLink.ProtoReflect.Descriptor instead.
func (*SatelliteLink) Descriptor() ([]byte, []int) {
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP(), []int{3}
}

func (x *SatelliteLink) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

func (x *SatelliteLink) GetGroundStationId() string {
	if x != nil {
		return x.GroundStationId
	}
	return ""
}

func (x *SatelliteLink) GetOrbitalNodeId() string {
	if x != nil {
		return x.OrbitalNodeId
	}
	return ""
}

func (x *SatelliteLink) GetState() SatelliteLink_LinkState {
	if x != nil {
		return x.State
	}
	return SatelliteLink_LINK_STATE_UNKNOWN
}

func (x *SatelliteLink) GetCurrentLatencyMs() float64 {
	if x != nil {
		return x.CurrentLatencyMs
	}
	return 0
}

func (x *SatelliteLink) GetCurrentBandwidthMbps() float64 {
	if x != nil {
		return x.CurrentBandwidthMbps
	}
	return 0
}

func (x *SatelliteLink) GetPacketLossPercent() float64 {
	if x != nil {
		return x.PacketLossPercent
	}
	return 0
}

func (x *SatelliteLink) GetLastHeartbeatUnixNs() int64 {
	if x != nil {
		return x.LastHeartbeatUnixNs
	}
	return 0
}

func (x *SatelliteLink) GetLinkStatusAttestation() *Attestation {
	if x != nil {
		return x.LinkStatusAttestation
	}
	return nil
}

type LinkStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LinkIdsFilter []string               `protobuf:"bytes,1,rep,name=link_ids_filter,json=linkIdsFilter,proto3" json:"link_ids_filter,omitempty"` // If empty, returns all known links
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkStatusRequest) Reset() {
	*x = LinkStatusRequest{}
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkStatusRequest) ProtoMessage() {}

func (x *LinkStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkStatusRequest.ProtoReflect.Descriptor instead.
func (*LinkStatusRequest) Descriptor() ([]byte, []int) {
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP(), []int{4}
}

func (x *LinkStatusRequest) GetLinkIdsFilter() []string {
	if x != nil {
		return x.LinkIdsFilter
	}
	return nil
}

type LinkStatusResponse struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Status                  *Status                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Links                   []*SatelliteLink       `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"`
	ReportGeneratedAtUnixNs int64                  `protobuf:"varint,3,opt,name=report_generated_at_unix_ns,json=reportGeneratedAtUnixNs,proto3" json:"report_generated_at_unix_ns,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *LinkStatusResponse) Reset() {
	*x = LinkStatusResponse{}
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkStatusResponse) ProtoMessage() {}

func (x *LinkStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkStatusResponse.ProtoReflect.Descriptor instead.
func (*LinkStatusResponse) Descriptor() ([]byte, []int) {
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP(), []int{5}
}

func (x *LinkStatusResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *LinkStatusResponse) GetLinks() []*SatelliteLink {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *LinkStatusResponse) GetReportGeneratedAtUnixNs() int64 {
	if x != nil {
		return x.ReportGeneratedAtUnixNs
	}
	return 0
}

type ActivateRelayRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Reason              string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	TriggeringPanicTier PanicTier_Level        `protobuf:"varint,2,opt,name=triggering_panic_tier,json=triggeringPanicTier,proto3,enum=blackice.v1.PanicTier_Level" json:"triggering_panic_tier,omitempty"`
	AdminAttestation    *Attestation           `protobuf:"bytes,3,opt,name=admin_attestation,json=adminAttestation,proto3" json:"admin_attestation,omitempty"` // Strong authorization required
	// Expected duration for relay activation, if known (e.g., "24h")
	ExpectedDurationStr string `protobuf:"bytes,4,opt,name=expected_duration_str,json=expectedDurationStr,proto3" json:"expected_duration_str,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ActivateRelayRequest) Reset() {
	*x = ActivateRelayRequest{}
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateRelayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateRelayRequest) ProtoMessage() {}

func (x *ActivateRelayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateRelayRequest.ProtoReflect.Descriptor instead.
func (*ActivateRelayRequest) Descriptor() ([]byte, []int) {
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP(), []int{6}
}

func (x *ActivateRelayRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ActivateRelayRequest) GetTriggeringPanicTier() PanicTier_Level {
	if x != nil {
		return x.TriggeringPanicTier
	}
	return PanicTier_TIER_0_NORMAL
}

func (x *ActivateRelayRequest) GetAdminAttestation() *Attestation {
	if x != nil {
		return x.AdminAttestation
	}
	return nil
}

func (x *ActivateRelayRequest) GetExpectedDurationStr() string {
	if x != nil {
		return x.ExpectedDurationStr
	}
	return ""
}

type RelayActivationResponse struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Status                  *Status                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	RelaySessionId          string                 `protobuf:"bytes,2,opt,name=relay_session_id,json=relaySessionId,proto3" json:"relay_session_id,omitempty"`
	ActiveRelayLinks        []*SatelliteLink       `protobuf:"bytes,3,rep,name=active_relay_links,json=activeRelayLinks,proto3" json:"active_relay_links,omitempty"`
	ActivatedAtUnixNs       int64                  `protobuf:"varint,4,opt,name=activated_at_unix_ns,json=activatedAtUnixNs,proto3" json:"activated_at_unix_ns,omitempty"`
	LedgerEntryConfirmation *LedgerEntry           `protobuf:"bytes,5,opt,name=ledger_entry_confirmation,json=ledgerEntryConfirmation,proto3" json:"ledger_entry_confirmation,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RelayActivationResponse) Reset() {
	*x = RelayActivationResponse{}
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelayActivationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayActivationResponse) ProtoMessage() {}

func (x *RelayActivationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayActivationResponse.ProtoReflect.Descriptor instead.
func (*RelayActivationResponse) Descriptor() ([]byte, []int) {
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP(), []int{7}
}

func (x *RelayActivationResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *RelayActivationResponse) GetRelaySessionId() string {
	if x != nil {
		return x.RelaySessionId
	}
	return ""
}

func (x *RelayActivationResponse) GetActiveRelayLinks() []*SatelliteLink {
	if x != nil {
		return x.ActiveRelayLinks
	}
	return nil
}

func (x *RelayActivationResponse) GetActivatedAtUnixNs() int64 {
	if x != nil {
		return x.ActivatedAtUnixNs
	}
	return 0
}

func (x *RelayActivationResponse) GetLedgerEntryConfirmation() *LedgerEntry {
	if x != nil {
		return x.LedgerEntryConfirmation
	}
	return nil
}

// For sending critical, low-bandwidth control signals (e.g., shutdown, activate specific defenses)
type ControlSignalRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RelaySessionId    string                 `protobuf:"bytes,1,opt,name=relay_session_id,json=relaySessionId,proto3" json:"relay_session_id,omitempty"`          // Must match an active relay session
	TargetComponentId string                 `protobuf:"bytes,2,opt,name=target_component_id,json=targetComponentId,proto3" json:"target_component_id,omitempty"` // Target component to receive the signal
	SignalType        string                 `protobuf:"bytes,3,opt,name=signal_type,json=signalType,proto3" json:"signal_type,omitempty"`                        // e.g., "EMERGENCY_SHUTDOWN", "ACTIVATE_FAILSAFE_X"
	SignalPayload     []byte                 `protobuf:"bytes,4,opt,name=signal_payload,json=signalPayload,proto3" json:"signal_payload,omitempty"`               // Encrypted and authenticated payload
	SenderAttestation *Attestation           `protobuf:"bytes,5,opt,name=sender_attestation,json=senderAttestation,proto3" json:"sender_attestation,omitempty"`   // Highly trusted sender (e.g., core panic controller)
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ControlSignalRequest) Reset() {
	*x = ControlSignalRequest{}
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlSignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlSignalRequest) ProtoMessage() {}

func (x *ControlSignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlSignalRequest.ProtoReflect.Descriptor instead.
func (*ControlSignalRequest) Descriptor() ([]byte, []int) {
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP(), []int{8}
}

func (x *ControlSignalRequest) GetRelaySessionId() string {
	if x != nil {
		return x.RelaySessionId
	}
	return ""
}

func (x *ControlSignalRequest) GetTargetComponentId() string {
	if x != nil {
		return x.TargetComponentId
	}
	return ""
}

func (x *ControlSignalRequest) GetSignalType() string {
	if x != nil {
		return x.SignalType
	}
	return ""
}

func (x *ControlSignalRequest) GetSignalPayload() []byte {
	if x != nil {
		return x.SignalPayload
	}
	return nil
}

func (x *ControlSignalRequest) GetSenderAttestation() *Attestation {
	if x != nil {
		return x.SenderAttestation
	}
	return nil
}

type ControlSignalResponse struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	Status                     *Status                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	SignalAckId                string                 `protobuf:"bytes,2,opt,name=signal_ack_id,json=signalAckId,proto3" json:"signal_ack_id,omitempty"`
	TransmittedViaLinkId       int64                  `protobuf:"varint,3,opt,name=transmitted_via_link_id,json=transmittedViaLinkId,proto3" json:"transmitted_via_link_id,omitempty"`
	OrbitalTransmitAttestation *Attestation           `protobuf:"bytes,4,opt,name=orbital_transmit_attestation,json=orbitalTransmitAttestation,proto3" json:"orbital_transmit_attestation,omitempty"` // Confirmation from satellite of transmission
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ControlSignalResponse) Reset() {
	*x = ControlSignalResponse{}
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlSignalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlSignalResponse) ProtoMessage() {}

func (x *ControlSignalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlSignalResponse.ProtoReflect.Descriptor instead.
func (*ControlSignalResponse) Descriptor() ([]byte, []int) {
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP(), []int{9}
}

func (x *ControlSignalResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ControlSignalResponse) GetSignalAckId() string {
	if x != nil {
		return x.SignalAckId
	}
	return ""
}

func (x *ControlSignalResponse) GetTransmittedViaLinkId() int64 {
	if x != nil {
		return x.TransmittedViaLinkId
	}
	return 0
}

func (x *ControlSignalResponse) GetOrbitalTransmitAttestation() *Attestation {
	if x != nil {
		return x.OrbitalTransmitAttestation
	}
	return nil
}

type OrbitalNodeHealthRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	OrbitalNodeIdsFilter []string               `protobuf:"bytes,1,rep,name=orbital_node_ids_filter,json=orbitalNodeIdsFilter,proto3" json:"orbital_node_ids_filter,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *OrbitalNodeHealthRequest) Reset() {
	*x = OrbitalNodeHealthRequest{}
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrbitalNodeHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrbitalNodeHealthRequest) ProtoMessage() {}

func (x *OrbitalNodeHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrbitalNodeHealthRequest.ProtoReflect.Descriptor instead.
func (*OrbitalNodeHealthRequest) Descriptor() ([]byte, []int) {
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP(), []int{10}
}

func (x *OrbitalNodeHealthRequest) GetOrbitalNodeIdsFilter() []string {
	if x != nil {
		return x.OrbitalNodeIdsFilter
	}
	return nil
}

type StringStringMap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        map[string]string      `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringStringMap) Reset() {
	*x = StringStringMap{}
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringStringMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringStringMap) ProtoMessage() {}

func (x *StringStringMap) ProtoReflect() protoreflect.Message {
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringStringMap.ProtoReflect.Descriptor instead.
func (*StringStringMap) Descriptor() ([]byte, []int) {
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP(), []int{11}
}

func (x *StringStringMap) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

type OrbitalNodeHealthResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Status             *Status                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	OrbitalNodesHealth []*NodeHealth          `protobuf:"bytes,2,rep,name=orbital_nodes_health,json=orbitalNodesHealth,proto3" json:"orbital_nodes_health,omitempty"`
	// Could include orbital-specific metrics like radiation levels, battery, etc.
	OrbitalSpecificMetrics map[string]*StringStringMap `protobuf:"bytes,3,rep,name=orbital_specific_metrics,json=orbitalSpecificMetrics,proto3" json:"orbital_specific_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *OrbitalNodeHealthResponse) Reset() {
	*x = OrbitalNodeHealthResponse{}
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrbitalNodeHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrbitalNodeHealthResponse) ProtoMessage() {}

func (x *OrbitalNodeHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blackice_proto_blackice_v1_satellite_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrbitalNodeHealthResponse.ProtoReflect.Descriptor instead.
func (*OrbitalNodeHealthResponse) Descriptor() ([]byte, []int) {
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP(), []int{12}
}

func (x *OrbitalNodeHealthResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *OrbitalNodeHealthResponse) GetOrbitalNodesHealth() []*NodeHealth {
	if x != nil {
		return x.OrbitalNodesHealth
	}
	return nil
}

func (x *OrbitalNodeHealthResponse) GetOrbitalSpecificMetrics() map[string]*StringStringMap {
	if x != nil {
		return x.OrbitalSpecificMetrics
	}
	return nil
}

var File_blackice_proto_blackice_v1_satellite_proto protoreflect.FileDescriptor

const file_blackice_proto_blackice_v1_satellite_proto_rawDesc = "" +
	"\n" +
	"*blackice/proto/blackice/v1/satellite.proto\x12\vblackice.v1\x1a'blackice/proto/blackice/v1/common.proto\x1a&blackice/proto/blackice/v1/panic.proto\"\x88\x03\n" +
	"\x0fBackupDataChunk\x12\x1b\n" +
	"\tbackup_id\x18\x01 \x01(\tR\bbackupId\x12A\n" +
	"\fcontent_type\x18\x02 \x01(\x0e2\x1e.blackice.v1.BackupContentTypeR\vcontentType\x12!\n" +
	"\fdata_payload\x18\x03 \x01(\fR\vdataPayload\x12'\n" +
	"\x0fsequence_number\x18\x04 \x01(\x03R\x0esequenceNumber\x12\"\n" +
	"\ris_last_chunk\x18\x05 \x01(\bR\visLastChunk\x12E\n" +
	"\x11chunk_attestation\x18\x06 \x01(\v2\x18.blackice.v1.AttestationR\x10chunkAttestation\x12\x1a\n" +
	"\bpriority\x18\a \x01(\x05R\bpriority\x12\x1b\n" +
	"\tdata_hash\x18\b \x01(\fR\bdataHash\x12%\n" +
	"\x0ehash_algorithm\x18\t \x01(\tR\rhashAlgorithm\"\x9a\x02\n" +
	"\tBackupAck\x12+\n" +
	"\x06status\x18\x01 \x01(\v2\x13.blackice.v1.StatusR\x06status\x12\x1b\n" +
	"\tbackup_id\x18\x02 \x01(\tR\bbackupId\x12(\n" +
	"\x10chunk_receipt_id\x18\x03 \x01(\tR\x0echunkReceiptId\x12E\n" +
	" received_at_orbital_node_unix_ns\x18\x04 \x01(\x03R\x1breceivedAtOrbitalNodeUnixNs\x12R\n" +
	"\x18orbital_node_attestation\x18\x05 \x01(\v2\x18.blackice.v1.AttestationR\x16orbitalNodeAttestation\"\x89\x02\n" +
	"\x15RetrieveBackupRequest\x12\x1b\n" +
	"\tbackup_id\x18\x01 \x01(\tR\bbackupId\x12N\n" +
	"\x13content_type_filter\x18\x02 \x01(\x0e2\x1e.blackice.v1.BackupContentTypeR\x11contentTypeFilter\x124\n" +
	"\x17as_of_timestamp_unix_ns\x18\x03 \x01(\x03R\x13asOfTimestampUnixNs\x12M\n" +
	"\x15retriever_attestation\x18\x04 \x01(\v2\x18.blackice.v1.AttestationR\x14retrieverAttestation\"\xdc\x04\n" +
	"\rSatelliteLink\x12\x17\n" +
	"\alink_id\x18\x01 \x01(\tR\x06linkId\x12*\n" +
	"\x11ground_station_id\x18\x02 \x01(\tR\x0fgroundStationId\x12&\n" +
	"\x0forbital_node_id\x18\x03 \x01(\tR\rorbitalNodeId\x12:\n" +
	"\x05state\x18\x04 \x01(\x0e2$.blackice.v1.SatelliteLink.LinkStateR\x05state\x12,\n" +
	"\x12current_latency_ms\x18\x05 \x01(\x01R\x10currentLatencyMs\x124\n" +
	"\x16current_bandwidth_mbps\x18\x06 \x01(\x01R\x14currentBandwidthMbps\x12.\n" +
	"\x13packet_loss_percent\x18\a \x01(\x01R\x11packetLossPercent\x123\n" +
	"\x16last_heartbeat_unix_ns\x18\b \x01(\x03R\x13lastHeartbeatUnixNs\x12P\n" +
	"\x17link_status_attestation\x18\t \x01(\v2\x18.blackice.v1.AttestationR\x15linkStatusAttestation\"\x86\x01\n" +
	"\tLinkState\x12\x16\n" +
	"\x12LINK_STATE_UNKNOWN\x10\x00\x12\x15\n" +
	"\x11LINK_STATE_ACTIVE\x10\x01\x12\x17\n" +
	"\x13LINK_STATE_DEGRADED\x10\x02\x12\x17\n" +
	"\x13LINK_STATE_INACTIVE\x10\x03\x12\x18\n" +
	"\x14LINK_STATE_CONGESTED\x10\x04\";\n" +
	"\x11LinkStatusRequest\x12&\n" +
	"\x0flink_ids_filter\x18\x01 \x03(\tR\rlinkIdsFilter\"\xb1\x01\n" +
	"\x12LinkStatusResponse\x12+\n" +
	"\x06status\x18\x01 \x01(\v2\x13.blackice.v1.StatusR\x06status\x120\n" +
	"\x05links\x18\x02 \x03(\v2\x1a.blackice.v1.SatelliteLinkR\x05links\x12<\n" +
	"\x1breport_generated_at_unix_ns\x18\x03 \x01(\x03R\x17reportGeneratedAtUnixNs\"\xfb\x01\n" +
	"\x14ActivateRelayRequest\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\x12P\n" +
	"\x15triggering_panic_tier\x18\x02 \x01(\x0e2\x1c.blackice.v1.PanicTier.LevelR\x13triggeringPanicTier\x12E\n" +
	"\x11admin_attestation\x18\x03 \x01(\v2\x18.blackice.v1.AttestationR\x10adminAttestation\x122\n" +
	"\x15expected_duration_str\x18\x04 \x01(\tR\x13expectedDurationStr\"\xc1\x02\n" +
	"\x17RelayActivationResponse\x12+\n" +
	"\x06status\x18\x01 \x01(\v2\x13.blackice.v1.StatusR\x06status\x12(\n" +
	"\x10relay_session_id\x18\x02 \x01(\tR\x0erelaySessionId\x12H\n" +
	"\x12active_relay_links\x18\x03 \x03(\v2\x1a.blackice.v1.SatelliteLinkR\x10activeRelayLinks\x12/\n" +
	"\x14activated_at_unix_ns\x18\x04 \x01(\x03R\x11activatedAtUnixNs\x12T\n" +
	"\x19ledger_entry_confirmation\x18\x05 \x01(\v2\x18.blackice.v1.LedgerEntryR\x17ledgerEntryConfirmation\"\x81\x02\n" +
	"\x14ControlSignalRequest\x12(\n" +
	"\x10relay_session_id\x18\x01 \x01(\tR\x0erelaySessionId\x12.\n" +
	"\x13target_component_id\x18\x02 \x01(\tR\x11targetComponentId\x12\x1f\n" +
	"\vsignal_type\x18\x03 \x01(\tR\n" +
	"signalType\x12%\n" +
	"\x0esignal_payload\x18\x04 \x01(\fR\rsignalPayload\x12G\n" +
	"\x12sender_attestation\x18\x05 \x01(\v2\x18.blackice.v1.AttestationR\x11senderAttestation\"\xfb\x01\n" +
	"\x15ControlSignalResponse\x12+\n" +
	"\x06status\x18\x01 \x01(\v2\x13.blackice.v1.StatusR\x06status\x12\"\n" +
	"\rsignal_ack_id\x18\x02 \x01(\tR\vsignalAckId\x125\n" +
	"\x17transmitted_via_link_id\x18\x03 \x01(\x03R\x14transmittedViaLinkId\x12Z\n" +
	"\x1corbital_transmit_attestation\x18\x04 \x01(\v2\x18.blackice.v1.AttestationR\x1aorbitalTransmitAttestation\"Q\n" +
	"\x18OrbitalNodeHealthRequest\x125\n" +
	"\x17orbital_node_ids_filter\x18\x01 \x03(\tR\x14orbitalNodeIdsFilter\"\x8e\x01\n" +
	"\x0fStringStringMap\x12@\n" +
	"\x06values\x18\x01 \x03(\v2(.blackice.v1.StringStringMap.ValuesEntryR\x06values\x1a9\n" +
	"\vValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfa\x02\n" +
	"\x19OrbitalNodeHealthResponse\x12+\n" +
	"\x06status\x18\x01 \x01(\v2\x13.blackice.v1.StatusR\x06status\x12I\n" +
	"\x14orbital_nodes_health\x18\x02 \x03(\v2\x17.blackice.v1.NodeHealthR\x12orbitalNodesHealth\x12|\n" +
	"\x18orbital_specific_metrics\x18\x03 \x03(\v2B.blackice.v1.OrbitalNodeHealthResponse.OrbitalSpecificMetricsEntryR\x16orbitalSpecificMetrics\x1ag\n" +
	"\x1bOrbitalSpecificMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.blackice.v1.StringStringMapR\x05value:\x028\x01*\xb2\x01\n" +
	"\x11BackupContentType\x12\x1c\n" +
	"\x18CONTENT_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fLEDGER_SNAPSHOT\x10\x01\x12\x1a\n" +
	"\x16ENCRYPTED_KEY_MATERIAL\x10\x02\x12\x19\n" +
	"\x15CRITICAL_CONFIG_STATE\x10\x03\x12\x18\n" +
	"\x14FORENSIC_LOG_ARCHIVE\x10\x04\x12\x19\n" +
	"\x15SYSTEM_RECOVERY_IMAGE\x10\x052\xa6\x04\n" +
	"\x10SatelliteService\x12D\n" +
	"\n" +
	"SendBackup\x12\x1c.blackice.v1.BackupDataChunk\x1a\x16.blackice.v1.BackupAck(\x01\x12T\n" +
	"\x0eRetrieveBackup\x12\".blackice.v1.RetrieveBackupRequest\x1a\x1c.blackice.v1.BackupDataChunk0\x01\x12P\n" +
	"\rGetLinkStatus\x12\x1e.blackice.v1.LinkStatusRequest\x1a\x1f.blackice.v1.LinkStatusResponse\x12a\n" +
	"\x16ActivateEmergencyRelay\x12!.blackice.v1.ActivateRelayRequest\x1a$.blackice.v1.RelayActivationResponse\x12Z\n" +
	"\x11SendControlSignal\x12!.blackice.v1.ControlSignalRequest\x1a\".blackice.v1.ControlSignalResponse\x12e\n" +
	"\x14GetOrbitalNodeHealth\x12%.blackice.v1.OrbitalNodeHealthRequest\x1a&.blackice.v1.OrbitalNodeHealthResponseB7Z5github.com/TFMV/blackice/proto/blackice/v1;blackicev1b\x06proto3"

var (
	file_blackice_proto_blackice_v1_satellite_proto_rawDescOnce sync.Once
	file_blackice_proto_blackice_v1_satellite_proto_rawDescData []byte
)

func file_blackice_proto_blackice_v1_satellite_proto_rawDescGZIP() []byte {
	file_blackice_proto_blackice_v1_satellite_proto_rawDescOnce.Do(func() {
		file_blackice_proto_blackice_v1_satellite_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_blackice_proto_blackice_v1_satellite_proto_rawDesc), len(file_blackice_proto_blackice_v1_satellite_proto_rawDesc)))
	})
	return file_blackice_proto_blackice_v1_satellite_proto_rawDescData
}

var file_blackice_proto_blackice_v1_satellite_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_blackice_proto_blackice_v1_satellite_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_blackice_proto_blackice_v1_satellite_proto_goTypes = []any{
	(BackupContentType)(0),            // 0: blackice.v1.BackupContentType
	(SatelliteLink_LinkState)(0),      // 1: blackice.v1.SatelliteLink.LinkState
	(*BackupDataChunk)(nil),           // 2: blackice.v1.BackupDataChunk
	(*BackupAck)(nil),                 // 3: blackice.v1.BackupAck
	(*RetrieveBackupRequest)(nil),     // 4: blackice.v1.RetrieveBackupRequest
	(*SatelliteLink)(nil),             // 5: blackice.v1.SatelliteLink
	(*LinkStatusRequest)(nil),         // 6: blackice.v1.LinkStatusRequest
	(*LinkStatusResponse)(nil),        // 7: blackice.v1.LinkStatusResponse
	(*ActivateRelayRequest)(nil),      // 8: blackice.v1.ActivateRelayRequest
	(*RelayActivationResponse)(nil),   // 9: blackice.v1.RelayActivationResponse
	(*ControlSignalRequest)(nil),      // 10: blackice.v1.ControlSignalRequest
	(*ControlSignalResponse)(nil),     // 11: blackice.v1.ControlSignalResponse
	(*OrbitalNodeHealthRequest)(nil),  // 12: blackice.v1.OrbitalNodeHealthRequest
	(*StringStringMap)(nil),           // 13: blackice.v1.StringStringMap
	(*OrbitalNodeHealthResponse)(nil), // 14: blackice.v1.OrbitalNodeHealthResponse
	nil,                               // 15: blackice.v1.StringStringMap.ValuesEntry
	nil,                               // 16: blackice.v1.OrbitalNodeHealthResponse.OrbitalSpecificMetricsEntry
	(*Attestation)(nil),               // 17: blackice.v1.Attestation
	(*Status)(nil),                    // 18: blackice.v1.Status
	(PanicTier_Level)(0),              // 19: blackice.v1.PanicTier.Level
	(*LedgerEntry)(nil),               // 20: blackice.v1.LedgerEntry
	(*NodeHealth)(nil),                // 21: blackice.v1.NodeHealth
}
var file_blackice_proto_blackice_v1_satellite_proto_depIdxs = []int32{
	0,  // 0: blackice.v1.BackupDataChunk.content_type:type_name -> blackice.v1.BackupContentType
	17, // 1: blackice.v1.BackupDataChunk.chunk_attestation:type_name -> blackice.v1.Attestation
	18, // 2: blackice.v1.BackupAck.status:type_name -> blackice.v1.Status
	17, // 3: blackice.v1.BackupAck.orbital_node_attestation:type_name -> blackice.v1.Attestation
	0,  // 4: blackice.v1.RetrieveBackupRequest.content_type_filter:type_name -> blackice.v1.BackupContentType
	17, // 5: blackice.v1.RetrieveBackupRequest.retriever_attestation:type_name -> blackice.v1.Attestation
	1,  // 6: blackice.v1.SatelliteLink.state:type_name -> blackice.v1.SatelliteLink.LinkState
	17, // 7: blackice.v1.SatelliteLink.link_status_attestation:type_name -> blackice.v1.Attestation
	18, // 8: blackice.v1.LinkStatusResponse.status:type_name -> blackice.v1.Status
	5,  // 9: blackice.v1.LinkStatusResponse.links:type_name -> blackice.v1.SatelliteLink
	19, // 10: blackice.v1.ActivateRelayRequest.triggering_panic_tier:type_name -> blackice.v1.PanicTier.Level
	17, // 11: blackice.v1.ActivateRelayRequest.admin_attestation:type_name -> blackice.v1.Attestation
	18, // 12: blackice.v1.RelayActivationResponse.status:type_name -> blackice.v1.Status
	5,  // 13: blackice.v1.RelayActivationResponse.active_relay_links:type_name -> blackice.v1.SatelliteLink
	20, // 14: blackice.v1.RelayActivationResponse.ledger_entry_confirmation:type_name -> blackice.v1.LedgerEntry
	17, // 15: blackice.v1.ControlSignalRequest.sender_attestation:type_name -> blackice.v1.Attestation
	18, // 16: blackice.v1.ControlSignalResponse.status:type_name -> blackice.v1.Status
	17, // 17: blackice.v1.ControlSignalResponse.orbital_transmit_attestation:type_name -> blackice.v1.Attestation
	15, // 18: blackice.v1.StringStringMap.values:type_name -> blackice.v1.StringStringMap.ValuesEntry
	18, // 19: blackice.v1.OrbitalNodeHealthResponse.status:type_name -> blackice.v1.Status
	21, // 20: blackice.v1.OrbitalNodeHealthResponse.orbital_nodes_health:type_name -> blackice.v1.NodeHealth
	16, // 21: blackice.v1.OrbitalNodeHealthResponse.orbital_specific_metrics:type_name -> blackice.v1.OrbitalNodeHealthResponse.OrbitalSpecificMetricsEntry
	13, // 22: blackice.v1.OrbitalNodeHealthResponse.OrbitalSpecificMetricsEntry.value:type_name -> blackice.v1.StringStringMap
	2,  // 23: blackice.v1.SatelliteService.SendBackup:input_type -> blackice.v1.BackupDataChunk
	4,  // 24: blackice.v1.SatelliteService.RetrieveBackup:input_type -> blackice.v1.RetrieveBackupRequest
	6,  // 25: blackice.v1.SatelliteService.GetLinkStatus:input_type -> blackice.v1.LinkStatusRequest
	8,  // 26: blackice.v1.SatelliteService.ActivateEmergencyRelay:input_type -> blackice.v1.ActivateRelayRequest
	10, // 27: blackice.v1.SatelliteService.SendControlSignal:input_type -> blackice.v1.ControlSignalRequest
	12, // 28: blackice.v1.SatelliteService.GetOrbitalNodeHealth:input_type -> blackice.v1.OrbitalNodeHealthRequest
	3,  // 29: blackice.v1.SatelliteService.SendBackup:output_type -> blackice.v1.BackupAck
	2,  // 30: blackice.v1.SatelliteService.RetrieveBackup:output_type -> blackice.v1.BackupDataChunk
	7,  // 31: blackice.v1.SatelliteService.GetLinkStatus:output_type -> blackice.v1.LinkStatusResponse
	9,  // 32: blackice.v1.SatelliteService.ActivateEmergencyRelay:output_type -> blackice.v1.RelayActivationResponse
	11, // 33: blackice.v1.SatelliteService.SendControlSignal:output_type -> blackice.v1.ControlSignalResponse
	14, // 34: blackice.v1.SatelliteService.GetOrbitalNodeHealth:output_type -> blackice.v1.OrbitalNodeHealthResponse
	29, // [29:35] is the sub-list for method output_type
	23, // [23:29] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_blackice_proto_blackice_v1_satellite_proto_init() }
func file_blackice_proto_blackice_v1_satellite_proto_init() {
	if File_blackice_proto_blackice_v1_satellite_proto != nil {
		return
	}
	file_blackice_proto_blackice_v1_common_proto_init()
	file_blackice_proto_blackice_v1_panic_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_blackice_proto_blackice_v1_satellite_proto_rawDesc), len(file_blackice_proto_blackice_v1_satellite_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blackice_proto_blackice_v1_satellite_proto_goTypes,
		DependencyIndexes: file_blackice_proto_blackice_v1_satellite_proto_depIdxs,
		EnumInfos:         file_blackice_proto_blackice_v1_satellite_proto_enumTypes,
		MessageInfos:      file_blackice_proto_blackice_v1_satellite_proto_msgTypes,
	}.Build()
	File_blackice_proto_blackice_v1_satellite_proto = out.File
	file_blackice_proto_blackice_v1_satellite_proto_goTypes = nil
	file_blackice_proto_blackice_v1_satellite_proto_depIdxs = nil
}
